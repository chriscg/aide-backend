USE [AIDE]
GO
/****** Object:  StoredProcedure [dbo].[sp_GetTasksSummaryByEmpID]    Script Date: 5/31/2019 4:03:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_GetTasksSummaryByEmpID]
@EMPID INT,
@DATENOW DATE

AS
BEGIN

DECLARE @DAY1 DATE
DECLARE @DAY2 DATE
DECLARE @DAY3 DATE
DECLARE @DAY4 DATE
DECLARE @DAY5 DATE

DECLARE @OutstandingMON INT
DECLARE @OutstandingTUE INT
DECLARE @OutstandingWED INT
DECLARE @OutstandingTHU INT
DECLARE @OutstandingFRI INT

DECLARE @PrevOutstanding INT

IF ((DATENAME(dw,@DATENOW)) ='Monday') BEGIN
SET @DAY1 = @DATENOW; END

ELSE IF ((DATENAME(dw,@DATENOW)) ='Tuesday') BEGIN
SET @DAY1 = DATEADD(day,-1,@DATENOW); END

ELSE IF ((DATENAME(dw,@DATENOW)) ='Wednesday') BEGIN
SET @DAY1 = DATEADD(day,-2,@DATENOW); END

ELSE IF ((DATENAME(dw,@DATENOW)) ='Thursday')  BEGIN
SET @DAY1 = DATEADD(day,-3,@DATENOW); END

ELSE IF ((DATENAME(dw,@DATENOW)) ='Friday') BEGIN
SET @DAY1 = DATEADD(day,-4,@DATENOW); END

ELSE IF ((DATENAME(dw,@DATENOW)) ='Saturday') BEGIN
SET @DAY1 = DATEADD(day,2,@DATENOW); END

ELSE IF ((DATENAME(dw,@DATENOW)) ='Sunday') BEGIN
SET @DAY1 = DATEADD(day,3,@DATENOW); END
SET @DAY2 = DATEADD(day,1,@DAY1)
SET @DAY3 = DATEADD(day,1,@DAY2)
SET @DAY4 = DATEADD(day,1,@DAY3)
SET @DAY5 = DATEADD(day,1,@DAY4)
-- Calculation of task summary before this week

-- Number of assigned task before this week
SET @PrevOutstanding = ((SELECT COUNT(DATE_STARTED) FROM TASKS WHERE DATE_STARTED <= (DATEADD(day, -7, @DAY5)) AND EMP_ID = @EMPID) -
-- Number of completed task before this week
						(SELECT COUNT(COMPLTD_DATE) FROM TASKS WHERE COMPLTD_DATE <= (DATEADD(day, -7, @DAY5)) AND EMP_ID = @EMPID))

--Calculations for outstanding task daily
SET @OutstandingMON = ((SELECT COUNT (DATE_STARTED) FROM TASKS WHERE DATE_STARTED = @DAY1 AND EMP_ID = @EMPID) + (@PrevOutstanding)) - 
					   (SELECT COUNT(COMPLTD_DATE) FROM TASKS WHERE COMPLTD_DATE = @DAY1 AND EMP_ID = @EMPID)
SET @OutstandingTUE = ((SELECT COUNT (DATE_STARTED) FROM TASKS WHERE DATE_STARTED = @DAY2 AND EMP_ID = @EMPID) + (@OutstandingMON)) - 
					   (SELECT COUNT(COMPLTD_DATE) FROM TASKS WHERE COMPLTD_DATE = @DAY2 AND EMP_ID = @EMPID)
SET @OutstandingWED = ((SELECT COUNT (DATE_STARTED) FROM TASKS WHERE DATE_STARTED = @DAY3 AND EMP_ID = @EMPID) + (@OutstandingTUE)) - 
					   (SELECT COUNT(COMPLTD_DATE) FROM TASKS WHERE COMPLTD_DATE = @DAY3 AND EMP_ID = @EMPID)
SET @OutstandingTHU = ((SELECT COUNT (DATE_STARTED) FROM TASKS WHERE DATE_STARTED = @DAY4 AND EMP_ID = @EMPID) + (@OutstandingWED)) - 
					   (SELECT COUNT(COMPLTD_DATE) FROM TASKS WHERE COMPLTD_DATE = @DAY4 AND EMP_ID = @EMPID)
SET @OutstandingFRI = ((SELECT COUNT (DATE_STARTED) FROM TASKS WHERE DATE_STARTED = @DAY5 AND EMP_ID = @EMPID) + (@OutstandingTHU)) - 
					   (SELECT COUNT(COMPLTD_DATE) FROM TASKS WHERE COMPLTD_DATE = @DAY5 AND EMP_ID = @EMPID)
-- Columns
-- For name
SELECT 
RTrim(Coalesce(FIRST_NAME + ' ','') + Coalesce(LAST_NAME + ' ', '')) AS EmployeeName,
@PrevOutstanding AS 'LastWeekOutstanding',

-- For Monday
(SELECT COUNT(DATE_STARTED) FROM TASKS WHERE (DATE_STARTED = @DAY1 OR (@DAY1 <= COMPLTD_DATE)) AND EMP_ID = @EMPID) AS 'Mon_AT',
(SELECT COUNT(COMPLTD_DATE) FROM TASKS WHERE COMPLTD_DATE = @DAY1 AND EMP_ID = @EMPID) AS 'Mon_CT',
@OutstandingMON AS 'Mon_OT',

-- For Tuesday
(SELECT COUNT(DATE_STARTED) FROM TASKS WHERE (DATE_STARTED = @DAY2 OR (@DAY2 <= COMPLTD_DATE))  AND EMP_ID = @EMPID) AS 'Tue_AT',
(SELECT COUNT(COMPLTD_DATE) FROM TASKS WHERE COMPLTD_DATE = @DAY2 AND EMP_ID = @EMPID) AS 'Tue_CT',
@OutstandingTUE AS 'Tue_OT',

-- For Wednesday
(SELECT COUNT(DATE_STARTED) FROM TASKS WHERE (DATE_STARTED = @DAY3 OR (@DAY3 <= COMPLTD_DATE)) AND EMP_ID = @EMPID) AS 'Wed_AT',
(SELECT COUNT(COMPLTD_DATE) FROM TASKS WHERE COMPLTD_DATE = @DAY3 AND EMP_ID = @EMPID) AS 'Wed_CT',
@OutstandingWED AS 'Wed_OT',

-- For Thursday
(SELECT COUNT(DATE_STARTED) FROM TASKS WHERE (DATE_STARTED = @DAY4 OR (@DAY4 <= COMPLTD_DATE)) AND EMP_ID = @EMPID) AS 'Thu_AT',
(SELECT COUNT(COMPLTD_DATE) FROM TASKS WHERE COMPLTD_DATE = @DAY4 AND EMP_ID = @EMPID) AS 'Thu_CT',
@OutstandingTHU AS 'Thu_OT',

-- For Friday
(SELECT COUNT(DATE_STARTED) FROM TASKS WHERE (DATE_STARTED = @DAY5 OR (@DAY5 <= COMPLTD_DATE)) AND EMP_ID = @EMPID) AS 'Fri_AT',
(SELECT COUNT(COMPLTD_DATE) FROM TASKS WHERE COMPLTD_DATE = @DAY5 AND EMP_ID = @EMPID) AS 'Fri_CT',
@OutstandingFRI AS 'Fri_OT'

FROM EMPLOYEE WHERE EMP_ID = @EMPID

END
 


